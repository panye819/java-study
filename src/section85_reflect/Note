1、正常情况下，一个类要想使用，则必须找到此类，然后通过此类产生实例化对象，必须先有类再有对象
	通过对象去找其所在的类，可以使用Object类中的getClass()方法
	所有类的对象都可以使用getClass()方法完成操作，那么此方法返回的是一个Class，那么通过Class就可以完成
	反射操作。			
2、在反射机制中，Class类是一个操作的源头，所有的反射操作都是从此类展开
	但是，如果想要实例化此类对象，可以通过以下三个途径完成：
		1）通过Object类中的getClass()方法
		2）通过类.class的形式
		3）通过Class类的forName()静态方法
	最常用的是第三种forName()静态方法，其次是类.class的方法
3、用forName()静态方法实例化对象的过程中，如果类中没有无参构造方法，则会报类未找到错误。
	这时候需要调用指定的构造方法，并想起传递指定的参数才可以进行实例化操作。
	如果想得到一个类的构造方法，则可以使用以下的方法：
		public Constructor<?>[] getConstructors()
	如果一个类中有很多构造方法，该方法会将参数最多的构造方法放在数组的第一位，将参数最少的构造方法放在数组的
	最后一位。
	取得构造方法之后，可以通过Constructor类中的方法进行实例化
	以上的操作比起第一种来非常麻烦，所以在开发中，一定要在类中存在一个无参构造方法。
4、